services:
  # Database service
  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      # add the DB files store in local machine to avoid data loss when the container is removed
      - ./pgdata:/var/lib/postgresql/data
      - ./Config/Postgress/init.sql:/docker-entrypoint-initdb.d/init.sql

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    restart: always

  # Web service
  web:
    image: web
    build:
      context: .
      dockerfile: ./Config/Django/Dockerfile
    volumes:
      - static_files:/app/staticfiles
    environment:
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - SUPER_USER_NAME=admin
      - SUPER_USER_EMAIL=admin@gmail.com
      - SUPER_USER_PASSWORD=admin
    healthcheck:
      test: ["CMD", "curl", "--silent", "--fail", "http://localhost:8000/admin/login/"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      db:
        condition: service_healthy

    restart: always

  # Nginx service
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./Config/Nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_files:/static
    depends_on:
      web:
        condition: service_healthy

    restart: always

volumes:
  static_files:


